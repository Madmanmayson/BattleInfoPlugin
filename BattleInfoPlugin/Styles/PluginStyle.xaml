<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="http://schemes.grabacr.net/winfx/2015/personal/converters"
                    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                    xmlns:converters="clr-namespace:BattleInfoPlugin.Views.Converters"
                    xmlns:converters1="http://schemes.grabacr.net/winfx/2015/kancolleviewer/converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Styles/Icons.xaml" />

        <ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Themes/Dark.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/MetroRadiance;component/Themes/Accents/Purple.xaml" />-->

        <ResourceDictionary Source="pack://application:,,,/KanColleViewer.Controls;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/KanColleViewer.Controls;component/Styles/Controls.xaml" />

        <ResourceDictionary Source="Cell.xaml" />
        <ResourceDictionary Source="Flag.xaml" />
        <ResourceDictionary Source="PlaceHolderTextControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <l:VisibilityAndBooleanConverter x:Key="TrueToVisibleConverter"
                                     ConvertWhenTrue="Visible"
                                     ConvertWhenFalse="Collapsed" />
    <l:VisibilityAndBooleanConverter x:Key="FalseToVisibleConverter"
                                     ConvertWhenTrue="Collapsed"
                                     ConvertWhenFalse="Visible" />
    <l:VisibilityAndBooleanConverter x:Key="FalseToHiddenConverter"
                                     ConvertWhenTrue="Visible"
                                     ConvertWhenFalse="Hidden" />
    <converters:BrTagToNewLineConverter x:Key="BrTagToNewLineConverter" />
    <converters:AdditionalNameColorConverter x:Key="AdditionalNameColorConverter" />
    <converters:AttackTypeToDisplayTextConverter x:Key="AttackTypeConverter" />
    <converters:FleetBackgroundConverter x:Key="FleetBackgroundConverter"
                                         Background1="{StaticResource ThemeBrushKey}"
                                         Background2="{StaticResource SemiactiveBackgroundBrushKey}" />
    <converters:UnknownValueConverter x:Key="UnknownValueConverter" />
    <converters1:HasFlagConverter x:Key="HasFlagConverter" />

    <Style TargetType="{x:Type ToggleButton}"
           x:Key="SettingsPanelToggleButtonStyle">
        <Setter Property="FontFamily"
                Value="Segoe MDL2 Assets, Segoe UI Symbol" />
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Content"
                Value="&#xE098;" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrushKey}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ActiveForegroundBrushKey}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Width"
                Value="{Binding Source={x:Static SystemParameters.VerticalScrollBarWidth}}" />
        <Setter Property="Height"
                Value="{Binding Source={x:Static SystemParameters.HorizontalScrollBarHeight}}" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="FocusVisualStyle"
                Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Content"
                        Value="&#xE099;" />
                <Setter Property="Background"
                        Value="{DynamicResource BackgroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ActiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ActiveBorderBrushKey}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource AccentBrushKey}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ActiveBorderBrushKey}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource AccentForegroundBrushKey}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Background"
                        Value="{DynamicResource InactiveBackgroundBrushKey}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource InactiveBorderBrushKey}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource InactiveForegroundBrushKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
